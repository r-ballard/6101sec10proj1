---
title: "Intro to DS - Hypothesis Tests, T-test, 2-sample T-test, ANOVA, Chi-squared"
author: "GWU Intro to Data Science DATS 6101"
# date: "today"
date: "`r Sys.Date()`"
output:
  html_document:
    code_folding: hide
    number_sections: false
    toc: yes
    toc_depth: 3
    toc_float: yes
  pdf_document:
    toc: yes
    toc_depth: '3'
---

```{r init, include=FALSE}
# some of common options (and the defaults) are: 
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right', 
set.seed(20052)
library(ezids)

pkg_vector <- c("ggplot2",
                "dplyr",
                "gridExtra",
                "chisq.posthoc.test")

invisible(lapply(pkg_vector,loadPkg))

# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3) 
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
```

# HW Assignment - Hypothesis Testing 

This exercise uses the same graduate school admissions dataset from last homework. The dataset is called `gradAdmit` on api.regression.fit, or as a local file `LogRegAdmit.csv`.  
The variables in the dataset are:  

* `admit`: 0 or 1 (False or True)
* `gre`: gre score
* `gpa`: grade point average at undergraduate level
* `rank`: the ranking of the applicant’s undergraduate institute, 1, 2, 3, or 4


## Grad School Admissions


### Question 1

**Same as last homework, import the dataset as Adata, and make sure the data type for the variables are set properly for categorical variables.**

```{r results='markup', q01}
#Adata = api_rfit(   )
setwd("C:/Users/russe/Documents/github/6101SP2024/Assignments/assignment_3")
Adata = data.frame(read.csv("LogRegAdmit.csv",
                            header=TRUE,
                            sep=",",
                            colClasses=c("admit"="factor",
                                         "gre"="integer",
                                         "gpa"="numeric",
                                         "rank"="factor")))

xkabledplyhead(Adata, title="Header rows for Adata",
                      pos="center")
```

Inspecting the `head()` of the data set, it appears the data has been loaded into the Adata2 dataframe successfully. I have elected to load the `admit` and `rank` variables as factors, as these variables are categorical in nature.

### Question 2

**Use the `outlierKD2()` function, remove the outliers for gre and gpa. Save the resulting dataframe as Adata2. You will need to do this in two steps, removing outliers for one variable at a time. How many NA values are in gre and in gpa with the resulting dataframe *Adata2*? **


```{r results='markup', q02}
Adata2 <- ezids::outlierKD2(Adata,
                            gre,
                            rm=TRUE,
                            boxplt=TRUE,
                            qqplt=TRUE)
         
Adata2 <- ezids::outlierKD2(Adata2,
                            gpa,
                            rm=TRUE,
                            boxplt=TRUE,
                            qqplt=TRUE)

summary(Adata2)
```

Inspecting the `summary(Adata2)` results above we see that once our preprocessing removes outliers in the data, the gre field has 4 NA values, and the gpa field has 0.

### Question 3

**Like last time, separate the two subsets again, for admitted and rejected. **
```{r q03}
admitted <- Adata2 %>% filter(admit == '1')
rejected <- Adata2 %>% filter(admit == '0')
```
The `Adata2` admissions dataset has been subset into two dataframes:

* `admitted` which contains students with an admit indicator variable of `1`, admitted.
* `rejected` which contains students with an admit indicator variable of `0`, not admitted (rejected).

### Question 4

```{r q04}
admitted_gre_hist <- ggplot(admitted, aes(x = gre)) +
    geom_histogram(fill="green4") +
    xlim(300,800) + ylim(0,15) +
    labs(title="Distribution of GRE Scores \nFor Admitted Students",
       x="GRE Score",
       y="Count") +
    theme(plot.title = element_text(hjust = 0.5))

rejected_gre_hist <- ggplot(rejected, aes(x = gre)) +
    geom_histogram(fill="gray") +
    xlim(300,800) + ylim(0,25) +
    labs(title="Distribution of GRE Scores \nFor Admitted Students",
       x="GRE Score",
       y="Count") +
    theme(plot.title = element_text(hjust = 0.5))


admitted_gpa_hist <- ggplot(admitted, aes(x = gpa)) +
    geom_histogram(fill="green4") +
    labs(title="Distribution of Student GPA \nFor Admitted Students",
       x="Student GPA",
       y="Count of Students") +
    theme(plot.title = element_text(hjust = 0.5))

rejected_gpa_hist <- ggplot(rejected, aes(x = gpa)) +
    geom_histogram(fill="grey") +
    labs(title="Distribution of Student GPA \nFor Rejected Students",
       x="Student GPA",
       y="Count of Students") +
    theme(plot.title = element_text(hjust = 0.5))

grid.arrange(admitted_gre_hist, rejected_gre_hist,
             admitted_gpa_hist, rejected_gpa_hist,
             nrow=2)

qqnorm(admitted$gre, main="Q-Q plot of GRE Scores for Admitted Students")
qqline(admitted$gre)

qqnorm(rejected$gre, main="Q-Q plot of GRE Scores for Rejected Students")
qqline(rejected$gre)

qqnorm(admitted$gpa, main="Q-Q plot of GPA for Admitted Students")
qqline(admitted$gpa)

qqnorm(rejected$gpa, main="Q-Q plot of GPA Scores for Rejected Students")
qqline(rejected$gpa)
```

**We were a little careless last time. Let us check for normality on the numerical variables. Let us use histogram (use `ggplot()`) and QQ-plot (use `qqnorm()`) to check the quantitative variables for the admitted and rejected subsets. Make a brief comment on the results. **

1. Comparing GRE score histograms for admitted and rejected students we see a more rightward skew in the accepted student data.
    + This skew indicates a higher number of students with higher GRE scores in the accepted student data.
2. Looking at the QQ plots there appears to be rightward skew in both accepted and rejected GRE scores.
3. We also see a high count of rejected students with GPAs in the mid 3's, this may be a quantitative cutoff for some programs or there may be another systemic reason for this clustering.

### Question 5

**Does the two subgroups have different gre average and gpa average? Use the standard $\alpha$ = 0.05. What are the p-values for the test on gre and gpa? What are your conclusions from the tests? **

```{r results='markup', q05}
anovaRes_gre = aov(gre ~ admit, data=Adata2)
summary(anovaRes_gre)
tukeyAoV_gre <- TukeyHSD(anovaRes_gre)
tukeyAoV_gre

anovaRes_gpa = aov(gpa ~ admit, data=Adata2)
summary(anovaRes_gpa)
tukeyAoV_gpa <- TukeyHSD(anovaRes_gpa)
tukeyAoV_gpa
```

#### Review of Test Results For GRE Score
1. Reviewing the results of the analysis of variance for GRE score's affect on admittance, we observe a p-value of 
`.00018`, this p-value is less than $\alpha$ = 0.05 thus we again reject the null hypothesis that the admitted and non-admitted groups have the same average GRE score.
2. Reviewing the results of the Tukey Honest Significant Differences test, we can say with 95% confidence that the difference in mean GRE score between `admitted` and `rejected` students is between `21.6 and 68.2`.

#### Review of Test Results For GPA
1. Reviewing the results of the analysis of variance for GPA's affect on admittance, we observe a p-value of 
`0.00044`, this p-value is less than $\alpha$ = 0.05 thus we reject the null hypothesis that the admitted and non-admitted groups have the same average GPA.
2. Reviewing the results of the Tukey Honest Significant Differences test, we can say with 95% confidence that the difference in mean GPA between `admitted` and `rejected` students is between `.063 and .22`.

### Question 6

**With the dataset Adata2, construct a contingency table between rank and admit. Are these two variables qualitative or quantitative? **

``` {r results='markup', q06}
#https://www.r-bloggers.com/2020/12/contingency-tables-in-r/
admission_contingency_table<-table(Adata2$rank,Adata2$admit, dnn=c("School Rank", "Admitted"))

admission_contingency_table
prop.table(admission_contingency_table,margin=1)

mosaicplot(admission_contingency_table)
```

Above is a contingency table for student admission by school rank.

* School rank is presumably qualitative, as it would involve many different factors evaluated holistically. Even were a rigorous methodology applied to the ranking system, these groupings would eventually come down to a discernment by the ranking body of a qualitative nature.

* Similarly, student admittance to an institution is a consideration by faculty and takes quantitative and qualitative metrics into account. Admittance decisions are ultimately qualitative, though binary in nature.

### Question 7

**Find out whether rank is independent of admission, according to the contingency table above. **

``` {r results='markup', q07}
chisq.test(admission_contingency_table)
```
The results of the above chi-squared test output on the proportions in the above contingency table indicate that the p-value is sufficiently small that we reject the null hypothesis that rank is independent of admission.

This is also reflected in the appearance of the table. Students from `Rank 1` schools are `>50%` accepted while students from `Rank 4` schools are `>80%` rejected. There are of course other factors that influence school ranking and how students arrive at these different schools.

### Question 8

**From *Adata2*, test whether students from the four ranks have the same average gre or not. And also test if they have the same average gpa or not. Remember that if they are not all the same, you will need to follow up with a post hoc test. Make brief comments on your results.**

```{r results='markup', q08}
anovaGPA = aov(gpa ~ rank, data=Adata2)
gpaanovasummary = summary(anovaGPA)
gpaanovasummary

anovaGRE = aov(gre ~ rank, data=Adata2)
greanovasummary = summary(anovaGRE)
greanovasummary
```
1. Results of `Single Factor Anova` test for School Rank and GPA.
  + p-value of test is `gpaanovasummary[[1]][["Pr(>F)"]][[1]]` = `r gpaanovasummary[[1]][["Pr(>F)"]][[1]]`, thus we fail to reject the null hypothesis that the distribution of mean GPA does not differ between the different school rankings.
2. Results of `Single Factor Anova` test for School Rank and GRE Score.
  + p-value of test is `greanovasummary[[1]][["Pr(>F)"]][[1]]` = `r greanovasummary[[1]][["Pr(>F)"]][[1]]`, thus we fail to reject the null hypothesis that the distribution of GRE score does not differ between the different school rankings.
  
Because we fail to reject the null hypothesis that mean GPA differs between the school ranks, and we also fail to reject the null hypothesis that mean GRE score differs between school ranks, posthoc tests for these analyses is not necessary.
